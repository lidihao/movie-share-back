<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hao.movieshareback.dao.RoleMapper">
    <!--
   `role_id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
    `role_name` VARCHAR(100) NOT NULL COMMENT '角色名称',
    `role_des` VARCHAR(100) NOT NULL COMMENT '角色描述',
    `created_time` DATETIME    COMMENT '创建时间' ,
    `created_by` VARCHAR(32)    COMMENT '创建时间',
    `updated_time` DATETIME    COMMENT '更新时间' ,
    `updated_by` VARCHAR(32)    COMMENT '更新人' ,
    `is_delete` int(1) NOT NULL  DEFAULT 0 COMMENT '是否删除',
    PRIMARY KEY (role_id),
    INDEX (is_delete)
    -->
    <resultMap id="RoleResultMap" type="com.hao.movieshareback.model.Role">
        <id property="roleId" column="role_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        <result property="roleName" column="role_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="roleDes" column="role_des" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="createdTime" column="created_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="createdBy" column="created_by" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="updatedTime" column="updated_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="updatedBy" column="updated_by" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="isDelete" column="is_delete" javaType="java.lang.Boolean" jdbcType="BIT"/>
    </resultMap>

    <sql id="Base_Column_List" >
        role.role_id,role.role_name,role.role_des,role.created_time,role.created_by,role.updated_time,role.updated_by,role.is_delete
    </sql>

    <insert id="save" parameterType="com.hao.movieshareback.model.Role" >
        insert into role
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="roleName != null" >
                role_name,
            </if>
            <if test="roleDes != null" >
                role_des,
            </if>
            <if test="createdTime != null" >
                created_time,
            </if>
            <if test="createdBy!=null">
                created_by,
            </if>
            <if test="updatedTime!=null">
                updated_time,
            </if>
            <if test="updatedBy!=null">
                updated_by,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="roleName != null" >
                #{roleName},
            </if>
            <if test="roleDes != null" >
                #{roleDes},
            </if>
            <if test="createdTime != null" >
                #{createdTime},
            </if>
            <if test="createdBy!=null">
                #{createdBy},
            </if>
            <if test="updatedTime!=null">
                #{updatedTime},
            </if>
            <if test="updatedBy!=null">
                #{updatedBy},
            </if>
        </trim>
    </insert>

    <select id="selectRolesByUserName" resultMap="RoleResultMap">
        select distinct <include refid="Base_Column_List"></include>
        from role join user_role join user
        on role.is_delete=0 and user_role.is_delete=0 and user.is_delete=0
        and role.role_id=user_role.role_id and user.user_id=user_role.user_id and user.user_name = #{userName}
    </select>
    <select id="selectRoleByRoleName" resultMap="RoleResultMap">
        select <include refid="Base_Column_List"></include>
        from role where role.role_name=#{roleName} and role.is_delete=0
    </select>

    <select id="selectAllRole" resultMap="RoleResultMap">
        select <include refid="Base_Column_List"></include>
        from role where role.is_delete=0
    </select>

    <insert id="addUserRole">
        insert into user_role(user_id,role_id) values (#{userId},#{roleId})
    </insert>
</mapper>